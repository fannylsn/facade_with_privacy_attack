[DATASET]
dataset_package = decentralizepy.datasets.RotatedCIFAR
dataset_class = RotatedCIFAR
model_class = ConvNet
; provide directory containing "cifar-10-batches-py" folder | Pre-download recommended
; New download does not work with multiple processes | Crashes the first time, just retry
train_dir = ./eval/data/
test_dir = ./eval/data/
; python list of fractions below
sizes = [[1/16]*16,[1/16]*2]
random_seed = 92
validation_source = Test
; Train or Test set used to extract the validation set only on CIFAR-10 and FEMNIST
; On FEMNIST if the validation set is extracted from the test set is the same for all the clients
validation_size = 0.1
; fraction of the train or test set used as validation set, implemented only on CIFAR-10 and FEMNIST dataset
number_of_clusters = 2

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = SGD
lr = 0.01
momentum = 0.9

[TRAIN_PARAMS]
training_package = decentralizepy.training.TrainingNIID
training_class = TrainingNIID
rounds = 2
full_epochs = True
batch_size = 100
shuffle = True
loss_package = torch.nn
loss_class = CrossEntropyLoss

[COMMUNICATION]
comm_package = decentralizepy.communication.TCP
comm_class = TCP
addresses_filepath = ./tutorial/DPSGDwithNonIID/ip.json
offset = 50000

[SHARING]
sharing_package = decentralizepy.sharing.Sharing
sharing_class = Sharing

[NODE]
graph_degree = 3
log_per_sample_loss = False
log_per_sample_pred_true = True
do_all_reduce_models = True
